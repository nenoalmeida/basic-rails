MODEL VIEW CONTROLLER

Model–view–controller (MVC) is a software architectural pattern for implementing user interfaces on computers. 
It divides a given software application into three interconnected parts, so as to separate internal representations of 
information from the ways that information is presented to or accepted from the user.

Traditionally used for desktop graphical user interfaces (GUIs), this architecture has become extremely popular for
designing web applications.

As with other software patterns, MVC expresses the "core of the solution" to a problem while allowing it to be adapted
for each system. Particular MVC architectures can vary significantly from the traditional description here.

Components
A typical collaboration of the MVC components.

The central component of MVC, the model, captures the behavior of the application in terms of its problem domain, 
independent of the user interface.

The following description are abstracts from the w3school.

Model - The model is the part of the application that handles the logic for the application data.

View -	The View is the parts of the application that handle the display of the data.

Controller -	The Controller is the part of the application that handles user interaction.


Interactions

In addition to dividing the application into three kinds of components, the model–view–controller design defines the 
interactions between them.

    A model stores data that is retrieved according to commands from the controller and displayed in the view.
    
    A view generates an output presentation to the user based on changes in the model.
    
    A controller can send commands to the model to update the model's state (e.g. editing a document). It can also send 
    commands to its associated view to change the view's presentation of the model (e.g. by scrolling through a document).
    
    
    

